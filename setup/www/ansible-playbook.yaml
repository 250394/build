---
- hosts: nodejs.org

  remote_user: root

  tasks:
    - include_vars: ansible-vars.yaml
      tags: vars

    - name: General | APT Update
      apt: update_cache=yes
      tags: general

    - name: General | APT Upgrade
      apt: upgrade=full
      tags: general

    - name: Node.js | Add the NodeSource Node.js repo
      command: "bash -c 'curl -sL https://deb.nodesource.com/setup_iojs_3.x | bash -'"
      tags: node

    - name: General | Install required packages
      apt: name={{ item }} update_cache=yes state=latest
      with_items: packages
      tags: general

    - name: User | Add {{ server_user }} user
      user: name="{{ server_user }}" shell=/bin/bash
      tags: user

    - name: User | Download pubkey(s)
      get_url: url=https://github.com/{{ item }}.keys dest=/tmp/{{ item }}.keys
      delegate_to: 127.0.0.1
      with_items: ssh_users
      tags: user

    - name: General | Create authorized_keys for root
      authorized_key: user="root" key="{{ lookup('file', '/tmp/' + item + '.keys') }}"
      with_items: ssh_users
      tags: user

    - name: General | Create authorized_keys for {{ server_user }}
      authorized_key: user="{{ server_user }}" key="{{ lookup('file', '/tmp/' + item + '.keys') }}"
      with_items: ssh_users
      tags: user

    - name: GitHub Webhook | Install github-webhook
      command: "npm install github-webhook -g"
      tags: webhook

    - name: GitHub Webhook | Copy config
      copy: src=./resources/github-webhook.json dest=/etc/github-webhook.json mode=0644
      tags: webhook

    - name: GitHub Webhook | Copy secret to config
      replace: dest=/etc/github-webhook.json regexp="\{\{github_secret\}\}" replace="{{ github_secret }}"
      tags: webhook

    - name: GitHub Webhook | Copy update nodejs command to config
      replace: dest=/etc/github-webhook.json regexp="\{\{update_nodejs_command\}\}" replace="{{ update_nodejs_command }}"
      tags: webhook

    - name: GitHub Webhook | Copy update iojs command to config
      replace: dest=/etc/github-webhook.json regexp="\{\{update_iojs_command\}\}" replace="{{ update_iojs_command }}"
      tags: webhook

    - name: GitHub Webhook | Copy Upstart config
      copy: src=./resources/github-webhook.conf dest=/etc/init/github-webhook.conf mode=0644
      tags: webhook

    - name: GitHub Webhook | Start service
      service: name=github-webhook state=started
      tags: webhook

    - name: Setup | Initial nodejs clone
      remote_user: "{{ server_user }}"
      command: "bash -c '{{ clone_nodejs_command }}'"
      tags: setup

    - name: Setup | Initial iojs clone
      remote_user: "{{ server_user }}"
      command: "bash -c '{{ clone_iojs_command }}'"
      tags: setup

    - name: Setup | Initial nodejs update
      remote_user: "{{ server_user }}"
      command: "bash -c '{{ update_nodejs_command }}'"
      tags: setup

    - name: Setup | Initial iojs update
      remote_user: "{{ server_user }}"
      command: "bash -c '{{ update_iojs_command }}'"
      tags: setup

    - name: nginx | Copy site configs
      copy: src=./resources/{{ item }} dest=/etc/nginx/sites-available/{{ item }} mode=0644
      with_items:
        - nodejs.org
        - iojs.org
      tags: nginx

    - name: nginx | Create config symlinks
      file: src=/etc/nginx/sites-available/{{ item }} dest=/etc/nginx/sites-enabled/00-{{ item }} state=link
      with_items:
        - nodejs.org
        - iojs.org
      tags: nginx

    - name: nginx | Generate DH params
      command: "bash -c 'mkdir -p /etc/nginx/ssl/ && openssl dhparam -out /etc/nginx/ssl/dhparam.pem 4096'"
      tags: nginx

    - name: nginx | Copy site certificates
      copy: src=./resources/{{ item }} dest=/etc/nginx/ssl/{{ item }} mode=0644
      with_items:
        - nodejs_chained.crt
        - iojs_chained.crt
        - nodejs.key
        - iojs.key
      tags: nginx

    - name: nginx | Delete default config
      file: path=/etc/nginx/sites-enabled/default state=absent
      tags: nginx

    - name: nginx | Add .pkg mime-type
      lineinfile: dest=/etc/nginx/mime.types line='application/octet-stream pkg;' insertafter='^types.*'
      tags: nginx

    - name: nginx | Add .xz mime-type
      lineinfile: dest=/etc/nginx/mime.types line='application/x-xz xz;' insertafter='^types.*'
      tags: nginx

    - name: nginx | Use official .gz mime-type
      lineinfile: dest=/etc/nginx/mime.types line='application/gzip gz;' insertafter='^types.*'
      tags: nginx

    - name: nginx | Restart service
      service: name=nginx state=restarted
      tags: webhook
